"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.File = exports.Blob = void 0;
const fetch_blob_1 = __importDefault(require("fetch-blob"));
exports.Blob = fetch_blob_1.default;
class File extends fetch_blob_1.default {
    constructor(blobParts, name, options = {}) {
        if (arguments.length < 2) {
            throw new TypeError("Failed to construct 'File': 2 arguments required, "
                + `but only ${arguments.length} present.`);
        }
        super(blobParts, options);
        this.name = name;
        this.lastModified = options.lastModified || Date.now();
    }
}
exports.File = File;
